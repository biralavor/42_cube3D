# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    all_maps_valgrind.yml                              :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: umeneses <umeneses@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/01/14 16:00:54 by umeneses          #+#    #+#              #
#    Updated: 2025/01/05 08:39:23 by umeneses         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

name: All Maps with Valgrind

on: [push, pull_request]

jobs:
  all-maps-valgrind:
    runs-on: ubuntu-latest
    env:
      my_valgrind: >
        valgrind --leak-check=full --track-origins=yes --trace-children-skip='*/bin/*,*/sbin/*,/usr/bin/*'
        --trace-children=yes --track-fds=yes --show-reachable=yes --suppressions=mlx_suppressions.sup

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.4

    - name: Install Aptitude
      run: sudo apt-get install -y aptitude
    
    - name: Install Valgrind
      run: sudo aptitude install -y valgrind

    - name: Install GLFW Library
      run: sudo aptitude install -y libglfw3 libglfw3-dev libglfw3-doc

    - name: Replace main.c
      run: |
        cp ./.github/workflows/main_for_actions.c ./src/01.main.c

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential

    - name: Compile Cube3D with make
      run: make

    - name: Print working directory and list files and directories
      run: |
        pwd
        ls -la

    - name: Check map file permissions
      run: ls -la ./maps

    - name: Testing all maps in the maps folder
      run: |
        set +e
        mkdir -p test-results
        for map in ./maps/*; do
          echo "/////////////////////////////////////"
          echo "Testing map: $map" | tee -a test-results/output.log
          filename=$(basename -- "$map")
          output=$(${my_valgrind} ./cub3d $map 2>&1)
          echo "$output" | tee -a test-results/output.log
          error_summary=$(echo "$output" | grep "ERROR SUMMARY")
          leak_summary=$(echo "$output" | grep -A5 "LEAK SUMMARY")
          echo "$error_summary" | tee -a test-results/output.log
          echo "$leak_summary" | tee -a test-results/output.log
          if [[ $filename == invalid* ]]; then
            if echo "$output" | grep -q "<< Error >> No map file found with this name T.T"; then
              echo "😭 😭 😭 😭 😭 😭 😭 😭 😭" | tee -a test-results/output.log
              echo "$map: FAILURE (No map file found with this name)" | tee -a test-results/results.txt
            elif echo "$error_summary" | grep -q "ERROR SUMMARY: [^0]"; then
              echo "😭 😭 😭 😭 😭 😭 😭 😭 😭" | tee -a test-results/output.log
              echo "$map: FAILURE (Valgrind errors found)" | tee -a test-results/results.txt
            elif echo "$leak_summary" | grep -q -E "definitely lost: [^0]|indirectly lost: [^0]|possibly lost: [^0]|still reachable: [^0]"; then
              echo "😭 😭 😭 😭 😭 😭 😭 😭 😭" | tee -a test-results/output.log
              echo "$map: FAILURE (Memory leaks found)" | tee -a test-results/results.txt
            else
              echo "🎊 🎊 🎊" | tee -a test-results/output.log
              echo "😎 😎 😎" | tee -a test-results/output.log
              echo "$map: SUCCESS (expected to fail and failed)" | tee -a test-results/results.txt
            fi
          else
            if echo "$output" | grep -q "<< Error >> No map file found with this name T.T"; then
              echo "😭 😭 😭 😭 😭 😭 😭 😭 😭" | tee -a test-results/output.log
              echo "$map: FAILURE (No map file found with this name)" | tee -a test-results/results.txt
            elif echo "$error_summary" | grep -q "ERROR SUMMARY: [^0]"; then
              echo "😭 😭 😭 😭 😭 😭 😭 😭 😭" | tee -a test-results/output.log
              echo "$map: FAILURE (Valgrind errors found)" | tee -a test-results/results.txt
            elif echo "$leak_summary" | grep -q -E "definitely lost: [^0]|indirectly lost: [^0]|possibly lost: [^0]|still reachable: [^0]"; then
              echo "😭 😭 😭 😭 😭 😭 😭 😭 😭" | tee -a test-results/output.log
              echo "$map: FAILURE (Memory leaks found)" | tee -a test-results/results.txt
            else
              echo "🎊 🎊 🎊" | tee -a test-results/output.log
              echo "😎 😎 😎" | tee -a test-results/output.log
              echo "🎉 🎉 🎉" | tee -a test-results/output.log
              echo "$map: SUCCESS" | tee -a test-results/results.txt
            fi
          fi
        done
        cat test-results/output.log

    - name: Display test results
      run: cat test-results/results.txt

    - name: Check for failures
      run: |
        if grep -q "FAILURE" test-results/results.txt; then
          echo "Some tests failed."
          grep "FAILURE" test-results/results.txt
          exit 1
        else
          echo "All tests passed with VALGRIND !!!."
        fi